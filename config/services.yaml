# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    from: '%env(MAILER_FROM)%'
    name: '%env(MAILER_NAME)%'

    author_image_directory: 'uploads/author'
    post_image_directory: 'uploads/post'
    feed_limit: '30'

    image_width: '1024'
    image_height: '768'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Redis:
        # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%env(REDIS_HOST)%'
                    - '%env(int:REDIS_PORT)%'


    image_manager:
        class: Intervention\Image\ImageManager
        arguments:
            - { driver: imagick }


            # uncomment the following if your Redis server requires a password
            # - password: '%env(REDIS_PASSWORD)%'

    App\Model\User\Application\Service\SignupSender:
        arguments:
            $from: '%from%'
            $name: '%name%'

    App\Model\Images\Infrastructure\Service\ImageSizeNormalizer:
        arguments:
            $imageManager: '@image_manager'
            $width: '%image_width%'
            $height: '%image_height%'

    images_author_file_uploader:
        class: App\Model\Images\Infrastructure\Service\FileUploader
        autowire: false
        arguments:
            $imageSizeNormalizer: '@App\Model\Images\Infrastructure\Service\ImageSizeNormalizer'
            $directory: '%author_image_directory%'
            $slugger: '@slugger'
            $filesystem: '@filesystem'

    images_post_file_uploader:
        class: App\Model\Images\Infrastructure\Service\FileUploader
        autowire: false
        arguments:
            $imageSizeNormalizer: '@App\Model\Images\Infrastructure\Service\ImageSizeNormalizer'
            $directory: '%post_image_directory%'
            $slugger: '@slugger'
            $filesystem: '@filesystem'

    App\Model\Images\Application\Author\Command\ChangeAvatar\ChangeAvatarCommandHandler:
        arguments:
            $fileUploader: '@images_author_file_uploader'

    App\Model\Images\Application\Post\Command\Create\CreatePostCommandHandler:
        arguments:
            $fileUploader: '@images_post_file_uploader'

    App\Twig\Extension\Images\Author\StoragePathExtension:
        arguments:
            $uploader: '@images_author_file_uploader'

    App\Twig\Extension\Images\Post\StoragePathExtension:
        arguments:
            $uploader: '@images_post_file_uploader'

    App\Model\Images\Application\Feed\Query\GetFeedByReader\QueryHandler:
        arguments:
            $limit: '%feed_limit%'

    App\Model\Shared\Domain\Event\Dispatcher\EventDispatcher:
        class: App\Model\Shared\Infrastructure\Event\Dispatcher\MessengerEventDispatcher

#    App\Model\User\Test\Unit\Domain\Factory\FactoryTest:
#        arguments:
#            factory: ['@App\Model\User\Domain\Factory\UserFactory']
